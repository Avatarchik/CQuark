using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using CQuark;
using System;

//这个类由工具自动生成，不需要手动修改

namespace CQuark{
	public partial class Wrap {
		private static bool {WrapName}SGet (string memberName, out CQ_Value returnValue) {
{WrapSGet}
			returnValue = CQ_Value.Null;
	        return false;
	    }

	    private static bool {WrapName}SSet (string memberName, CQ_Value param) {
{WrapSSet}
			return false;
	    }

		private static bool {WrapName}MGet (object objSelf, string memberName, out CQ_Value returnValue) {
{WrapMGet}
			returnValue = CQ_Value.Null;
			return false;
	    }

		private static bool {WrapName}MSet (object objSelf, string memberName, CQ_Value param) {
{WrapMSet}
			return false;
	    }
		
		private static bool {WrapName}New(List<CQ_Value> param, out CQ_Value returnValue, bool mustEqual){
{WrapNew}
			returnValue = CQ_Value.Null;
			return false;
		}
		
		private static bool {WrapName}SCall (string functionName, List<CQ_Value> param, out CQ_Value returnValue, bool mustEqual) {
{WrapSCall}
			returnValue = CQ_Value.Null;
	        return false;
	    }

		private static bool {WrapName}MCall (object objSelf, string functionName, List<CQ_Value> param, out CQ_Value returnValue, bool mustEqual) {
{WrapMCall}
			returnValue = CQ_Value.Null;
	        return false;
	    }

		private static bool {WrapName}IGet(object objSelf, CQ_Value key, out CQ_Value returnValue){
{WrapIGet}

			returnValue = CQ_Value.Null;
			return false;
		}

		private static bool {WrapName}ISet(object objSelf, CQ_Value key, CQ_Value param){
{WrapISet}
			
			return false;
		}
		
		private static bool {WrapName}Add(CQ_Value left, CQ_Value right, out CQ_Value returnValue, bool mustEqual){
{WrapAdd}
			returnValue = CQ_Value.Null;
			return false;
		}
		
		private static bool {WrapName}Sub(CQ_Value left, CQ_Value right, out CQ_Value returnValue, bool mustEqual){
{WrapSub}
			returnValue = CQ_Value.Null;
			return false;
		}
		
		private static bool {WrapName}Mul(CQ_Value left, CQ_Value right, out CQ_Value returnValue, bool mustEqual){
{WrapMul}
			returnValue = CQ_Value.Null;
			return false;
		}
		
		private static bool {WrapName}Div(CQ_Value left, CQ_Value right, out CQ_Value returnValue, bool mustEqual){
{WrapDiv}
			returnValue = CQ_Value.Null;
			return false;
		}
		
		private static bool {WrapName}Mod(CQ_Value left, CQ_Value right, out CQ_Value returnValue, bool mustEqual){
{WrapMod}
			returnValue = CQ_Value.Null;
			return false;
		}
	}
}
